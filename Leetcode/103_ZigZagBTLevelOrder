/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {

        List<List<Integer>> result = new ArrayList<List<Integer>>();

        if(root == null)
        {
            return result;
        }

        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        List<Integer> curr;
        int lNum = 1;
        boolean zigzag = false;

        while(!queue.isEmpty())
        {
            curr = new ArrayList<Integer>();
            int level = queue.size();

            for(int i = 0; i < level; i++)
            {
                TreeNode n = queue.poll();

                if(zigzag)
                {
                    curr.add(0, n.val);
                }
                else{
                    curr.add(n.val);
                }

                if(n.left != null)
                {
                    queue.offer(n.left);
                }
                if(n.right != null)
                {
                    queue.offer(n.right);
                }

            }
            zigzag = !zigzag;
            result.add(curr);
        }
        return result;
    }
}
