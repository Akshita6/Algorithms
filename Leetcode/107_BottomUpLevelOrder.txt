class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
	
		List<Integer> current;
		List<List<Integer>> result = new LinkedList<List<Integer>>();
		
		if(root == null)
		{
			return result;
		}
		
		Queue<TreeNode> q = new LinkedList<TreeNode>();
		q.offer(root);
		
		while(!q.isEmpty())
		{
			current = new ArrayList<Integer>();
			int level = q.size();
			
			for(int i = 0; i < level; i++)
			{
				Node n = q.poll();
				
				if(n.left != null)
				{
					q.offer(n.left);
				}
				
				if(n.right != null)
				{
					q.offer(n.right);
				}
				current.add(n.val);
			}
			result.add(0, current);
		
		}
		return result;	
	}
}