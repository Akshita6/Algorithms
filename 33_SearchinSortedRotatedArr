class Solution {
    public int search(int[] nums, int target) {

        if(nums == null || nums.length == 0)
        {
            return -1;
        }

        return binarySearch(nums, 0, nums.length - 1, target);
    }

    public int binarySearch(int[] nums, int low, int high, int target)
    {
        if(low > high)
        {
            return -1;
        }

        int mid = low + (high - low) / 2;

        if(target == nums[mid])
        {
            return mid;
        }

        if(nums[low] <= nums[mid])
        {
            if(target >= nums[low] && target < nums[mid])
            {
                return binarySearch(nums, low, mid - 1, target);
            }
            return binarySearch(nums, mid + 1, high, target);
        }
        else{
            if(target > nums[mid] && target <= nums[high])
            {
                return binarySearch(nums, mid + 1, high, target);
            }
            return binarySearch(nums, low, mid - 1, target);
        }
}
}
