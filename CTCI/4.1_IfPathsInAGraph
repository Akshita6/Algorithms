public class Graph{

  private int V;
  private LinkedList<Integer> adj[];

  public Graph(int v)
  {
    V = v;
    adj = new LinkedList[v];

    for(int i = 0; i < v; i++)
    {
      adj[i] = new LinkedList<Integer>();
    }
  }

  public void addEdge(int v, int w)
  {
    adj[v].add(w);
  }

  public boolean hasPath(int s, int d)
  {
    boolean[] visited = new boolean[V];
    Queue<Integer> q = new LinkedList<Integer>();
    q.add(s);
    Iterator<Integer> it;
    while(!q.isEmpty())
    {
      s = q.poll();

      int n;
      it = adj[s].listIterator();
      while(it.hasNext())
      {
        n = i.next();

        if(n == d)
        {
          return true;
        }
        if(!visited[n])
        {
          visited[n] = true;
          q.add(n);
        }
      }
    }
    return false;
  }


}
