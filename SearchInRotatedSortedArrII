O(n) worst case

1 1 5 1 1 1 1 or 1 1 1 1 1 1 1 5

class Solution {

    public boolean search(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        int mid = -1;
        while(start <= end)
        {
            mid = start + (end - start) / 2;
            if(nums[mid] == target)
            {
                return true;
            }
            if(nums[start] < nums[mid])
            {
                if(nums[start] <= target && target < nums[mid])
                {
                    end = mid - 1;
                }
                else
                {
                    start = mid + 1;
                }
            }
            else if(nums[start] > nums[mid])
            {
                if(nums[mid] < target && target <= nums[end])
                {
                    start = mid + 1;
                }
                else {
                    end = mid - 1;
                }
            }
            else
            {
                start = start + 1;
            }

        }
        return false;
    }
}
