/*
Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of
the squares of its digits, and repeat the process until the number equals 1 (where it will stay),
or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

*/


class Solution {
    public boolean isHappy(int n) {

        if(n == 0 || n == 1)
        {
            return true;
        }
        HashSet<Integer> set = new HashSet<>();
        while(set.add(n))
        {
            int sum1 = sqSumDigits(n);
            if(sum1 == 1)
            {
                return true;
            }
            n = sum1;
        }
        return false;
    }

    public int sqSumDigits(int n)
    {
        int sum = 0;
        while(n != 0)
        {
            int rem = n % 10;
            sum += rem * rem;
            n = n / 10;
        }
        return sum;
    }
}
