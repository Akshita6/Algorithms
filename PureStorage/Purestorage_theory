Stacks as arrays: Pros: Easy to implement. Memory is saved, as pointers are not involved.
Cons: It is not dynamic. It doesnâ€™t grow and shrink depending on needs at runtime.

Stacks as linked list: Pros: The linked list implementation of stack can grow and shrink according to the needs at runtime.
Cons: Requires extra memory due to involvement of pointers.

A critical section is a section of code that is executed by multiple threads and where the sequence of execution for the threads
makes a difference in the result of the concurrent execution of the critical section.

Running more than one thread inside the same application does not by itself cause problems. The problems arise when multiple threads
access the same resources. For instance the same memory (variables, arrays, or objects), systems (databases, web services etc.)
or files.

When the result of multiple threads executing a critical section may differ depending on the sequence in which the threads execute,
the critical section is said to contain a race condition. The term race condition stems from the metaphor that the threads are racing
through the critical section, and that the result of that race impacts the result of executing the critical section.
